allow_strafe 1
allow_mouse_aim 1
turn_speed 9

#not using cvars to obtain these values.  Instead, they are read in 
#from shiptypes.cfg and assigned to ship types.
	#thrust_strength 450
	#strafe_strength 450
	#brake_strength  450
	#player_speed 600

ab_shared 140
ab_strafe 140
ab_thrust 140
ab_brake  140
ab_shared_max 240
ab_strafe_max 100
ab_thrust_max 100
ab_brake_max 100
thrust_warmup 2
thrust_warmup_max 3
thrust_cooldown 3


exec shiptypes.cfg

fun delay {
	timer  "$$"   "$2"  ;
	trigger  "$1"   "$$"  ;
}

fun bot_once {
	fun bot_once_setup {
		addbot $2 $3 $4 $5;
		bot_on_die $_ killed_$1;
		sticky killed_$1;
	};
	ifndef killed_$1 bot_once_setup $1 $2 $3 $4 $5
}

fun bot_repeating {
	addbot $2 $3 $4 $5;
	bot_on_die $_ killed_$1;
}

fun region_radius { # x y -offset +offset
	add region_min_x $1 $3;
	add region_min_y $2 $3;
	add region_max_x $1 $4;
	add region_max_y $2 $4;
	let _ = $region_min_x $region_min_y $region_max_x $region_max_y;
}

fun wormhole { # x y name
	let wormhole_name = $3;
	let pos_$wormhole_name = $1 $2;
	
	fun bump_$wormhole_name {
		let name = $1;
		kick_ent_towards ${pos_$name} 200 ${outer_$name};
		set_rvel 10 ${outer_$name};
		unset ${outer_$name};
		trigger "bump_$name $name" outer_$name;
	};
	trigger "bump_$wormhole_name $wormhole_name" outer_$wormhole_name;
	
	region_radius $1 $2 -50 50;
	addregion $wormhole_name $_;
	
	region_radius $1 $2 -150 150;
	addregion outer_$wormhole_name $_;
	addent $1 $2 "images/wormhole.png" 1 0 " " nocollide
}

fun autopowerup { # x y name interval type
	let name = $3;
	let pos_$name = $1 $2;
	let interval_$name = $4;
	let type_$name = $5;
	fun place_$name {
		let name = $1;
		ifempty ${pos_$name} powerup ${pos_$name} ${type_$name};
		trigger "place_$name $name" timer_$name;
		timer timer_$name ${interval_$name};
		unset timer_$name;
	};
	place_$name $name;
}

fun automine { # x y name interval
	let name = $3;
	let pos_$name = $1 $2;
	let interval_$name = $4;
	fun place_$name {
		let name = $1;
		ifempty ${pos_$name} mine ${pos_$name} ${type_$name};
		trigger "place_$name $name" timer_$name;
		timer timer_$name ${interval_$name};
		unset timer_$name;
	};
	place_$name $name;
}

fun fade_map {
	cl fade_out 2;
	fun switch_map "map $1; cl fade_in 2; unset fade_over";
	trigger switch_map fade_over;
	timer fade_over 2;
}

fun orbit_center {
	dummy_ent $1 $2;
	let last_orbit_center = $_;
	let last_orbit_momentum = $3;
	set_rvel $3 $_;
}
fun orbiter {
	addent $*;
	make_relative $last_orbit_center $_;
}
fun recurse_orbit_center {
	dummy_ent $1 $2;
	make_relative $last_orbit_center $_;
	let last_r_orbit_center = $_;
	let last_r_orbit_momentum = $3;
	set_rvel $3 $_;
}
fun recurse_orbiter {
	addent $*;
	make_relative $last_r_orbit_center $_;
}
fun s_orbiter {
	addent $*;
	set_rvel $last_orbit_momentum $_;
	make_relative $last_orbit_center $_;
}
